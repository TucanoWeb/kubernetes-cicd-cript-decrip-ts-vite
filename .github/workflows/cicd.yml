name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Archive production artifacts
        run: tar -czf dist.tar.gz -C dist .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist.tar.gz
          
      - name: Verify build artifacts
        run: ls -la

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to server
        run: |
          scp -r dist.tar.gz tucanoweb@95.216.252.50:/home/tucanoweb/crip-decrip-app

      - name: Deploy to Kubernetes
        run: |
          ssh tucanoweb@95.216.252.50 <<EOF
          ls -la
          tar -xf dist.tar.gz
          microk8s kubectl create namespace httpd-namespace-devops || true
          microk8s kubectl apply -f - <<EOFYAML
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: crip-decrip-app
            namespace: httpd-namespace-devops
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: crip-decrip-app
            template:
              metadata:
                labels:
                  app: crip-decrip-app
              spec:
                containers:
                - name: crip-decrip-app
                  image: nginx:latest
                  ports:
                  - containerPort: 80
                  volumeMounts:
                  - name: app-volume
                    mountPath: /usr/share/nginx/html
            volumes:
            - name: app-volume
              hostPath:
                path: /home/tucanoweb/crip-decrip-app
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: crip-decrip-app
            namespace: httpd-namespace-devops
          spec:
            type: LoadBalancer
            ports:
            - port: 80
              targetPort: 80
              nodePort: 30005
            selector:
              app: crip-decrip-app
          ---
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: crip-decrip-app-ingress
            namespace: httpd-namespace-devops
          spec:
            rules:
            - host: myapp.local
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: crip-decrip-app
                      port:
                        number: 80
          EOFYAML
          EOF
